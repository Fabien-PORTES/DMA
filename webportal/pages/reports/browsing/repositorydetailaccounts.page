import "/webportal/pages/styles/styles.page"
import "/webportal/pages/resources/mappings.page"
import "/webportal/pages/resources/pages_nls.page"
import "/webportal/pages/reports/standard.page"

reportDetails = NLS {
	browsing_repository_detailaccounts.pagetitle [en "Account List" fr "Liste des Comptes du Référentiel"]
	browsing_repository_detailaccounts.title [en "Account List" fr "Liste des Comptes du Référentiel"]
	browsing_repository_detailaccounts.subtitle [ en "Accounts - Repository <<{0}>>" fr "Comptes - Référentiel <<{0}>>"]
	browsing_repository_detailaccounts.columns.login [ en "Account login" fr "Login du compte" ]
	browsing_repository_detailaccounts.columns.username [ en "Account username" fr "Nom du compte" ]
	browsing_repository_detailaccounts.columns.mail [ en "Account email" fr "Mail du compte" ]
	browsing_repository_detailaccounts.columns.disabled [ en "Disabled account" fr "Compte désactivé" ]
	browsing_repository_detailaccounts.columns.repositorydisplayname [ en "Repository" fr "Référentiel" ]
}

browsing_repository_detailaccounts = Page {

	title: $reportDetails.browsing_repository_detailaccounts.pagetitle
	tags: "repository" priority 200, "byuid" , "browsing"
	icon: "16/details/browsing_16.png" large-icon: "48/details/browsing_48.png"
	feature: browsing_repository_detailaccounts
	enter-event: BooleanCase (paramSearchMode) { when False then [ Set uid to nonEmptyUid] when True then []}
	
	mixins: simpleReport
	
	uid = Parameter {
		label:"Concept Uid"
		type:String
	}

	// Related to Search Navigator	
	paramSearchMode = Parameter {
		type: Boolean
		hidden: True
		default: False
	}
	// Related to Search Navigator	
	repositorySearch = SearchDefinition {
		entity: Repository
		simple-mode-rule: br_repository_simple_search
	}
	
	// Related to Search Navigator
	currentRepository = Variable {
		type: String
		initial: uid
	}
	
	selectedUid = Variable {
		type: String
	}
	
	selectedRecorduid = Variable {
		type: Integer
	}
	
	// Empty uid when search mode
	nonEmptyUid = Variable { type: String }
	
	// Related to Search Navigator	
	repositoryList = Dataset {
		search: Search {
			definition: repositorySearch
			view: br_repository_searchpoint with nonEmptyUid to uid
		}
	}
	
	conceptData = Record {
		view: br_repositoryDetail with currentRepository to uid
	}
	
	dataToReport = Dataset {
		view: br_account with conceptData.recorduid to repositoryrecorduid
	}

	Group{
		layout: Layout { grab: horizontal False vertical False align: horizontal Center vertical Beginning }
		Spacer {
			height: 11
			hidden: Not BooleanPredicate(paramSearchMode)
		}
		SetNavigator {
			data: repositoryList
			column: uid
			selection: currentRepository
			back-link: Activity Repository Detail with currentRepository to paramRepositoryUid , SerializeSearch repositorySearch to repositorySearch, paramSearchMode to paramSearchMode
			initial: uid
			show-count: True
			show-first: True
			show-last: True
			count-width: 150
			hidden: Not BooleanPredicate(paramSearchMode)
		}
	}
		
	Group {
		Text {
			value: $reportDetails.browsing_repository_detailaccounts.title	
		}		
		
		Link {
			icon: "32/details/printable_32_gray.png"
			target: Report browsing_accountsearch_simple with conceptData.recorduid to recorduid
			value: ""
			compact: True 
			layout: Layout { grab: horizontal False vertical False  indent: horizontal 0 vertical 0  align: horizontal End vertical Center}
			align: Right 
		}
		
		Text {
			value: $reportDetails.browsing_repository_detailaccounts.subtitle( conceptData.displayname )
			styling: reportSubtitle
			align: Left
		}
		
		Table{
			data: dataToReport
			double-click: GoTo Activity Account Detail with selectedUid to paramAccountUid
			show-filter: True
			show-count: True
			
			Column {
				column: recorduid
				hidden: True
				selection: selectedRecorduid
			}
			Column {
				column: uid
				hidden: True
				selection: selectedUid
			}
			Column{
				column: login
				header: $reportDetails.browsing_repository_detailaccounts.columns.login
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: username
				header: $reportDetails.browsing_repository_detailaccounts.columns.username
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: mail
				header: $reportDetails.browsing_repository_detailaccounts.columns.mail
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: disabled
				text: Transform Transform Current disabled using booleanAlwaysShow using booleanDisplayMapping
				header: $reportDetails.browsing_repository_detailaccounts.columns.disabled
				sortable: True
				filterable: True
				width:100%
				align: Center
			}
			Column{
				column: repositorydisplayname
				header: $reportDetails.browsing_repository_detailaccounts.columns.repositorydisplayname
				sortable: True
				filterable: True
				width:100%
			}
		}
		
		Button {
			actions:  GoTo Activity Account Detail with selectedUid to paramAccountUid
			layout: Layout { align: horizontal End vertical Beginning grab: horizontal False vertical False hint: width 200}
			disabled: StringPredicate(selectedUid) { when IsEmpty then True }
			text: $search_page.showdetails
		}
	}
}