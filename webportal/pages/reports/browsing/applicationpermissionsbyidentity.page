import "/webportal/pages/styles/styles.page"
import "/webportal/pages/resources/mappings.page"
import "/webportal/pages/resources/pages_nls.page"
import "/webportal/pages/reports/standard.page"

reportDetails = NLS {
	browsing_application_permissionsbyidentity.pagetitle [en "Permission Detailed by Identity" fr "Détail des Permissions par Identité"]
	browsing_application_permissionsbyidentity.title [en "Permission Detailed by Identity" fr "Détail des Permissions par Identité"]
	browsing_application_permissionsbyidentity.subtitle [en "Permissions - Application <<{0}>>" fr "Permissions - Application <<{0}>>"]
	browsing_application_permissionsbyidentity.columns.code [en "Permission Code" fr "Code de la Permission"]
	browsing_application_permissionsbyidentity.columns.identity_hrcode [ en "Identity HR code" fr "Matricule de l'identité" ]
	browsing_application_permissionsbyidentity.columns.identity_fullname [ en "Identity full name" fr "Nom complet de l'identité" ]
	browsing_application_permissionsbyidentity.columns.identity_internal [ en "Internal user flag" fr "Flag personne interne" ]
	browsing_application_permissionsbyidentity.columns.identity_jobtitledisplayname [ en "Job title" fr "Métier" ]
	browsing_application_permissionsbyidentity.columns.identityorg_displayname [ en "Organisation" fr "Organisation" ]
}

browsing_application_permissionsbyidentity = Page {

	title: $reportDetails.browsing_application_permissionsbyidentity.pagetitle
	tags: "application" priority 200, "byuid" , "browsing"
	icon: "16/details/browsing_16.png" large-icon: "48/details/browsing_48.png"
	feature: browsing_application_permissionsbyidentity
	enter-event: BooleanCase (paramSearchMode) { when False then [ Set uid to nonEmptyUid] when True then []}
	
	mixins: simpleReport
	
	uid = Parameter {
		label:"Concept Uid"
		type:String
	}

	// Related to Search Navigator	
	paramSearchMode = Parameter {
		type: Boolean
		hidden: True
		default: False
	}
	// Related to Search Navigator	
	applicationSearch = SearchDefinition {
		entity: Application
		simple-mode-rule: br_application_simple_search
	}
	
	// Related to Search Navigator
	currentApplication = Variable {
		type: String
		initial: uid
	}
	
	selectedUid = Variable {
		type: String
	}
	
	selectedRecorduid = Variable {
		type: Integer
	}
	
	// Empty uid when search mode
	nonEmptyUid = Variable { type: String }
	
	// Related to Search Navigator	
	applicationList = Dataset {
		search: Search {
			definition: applicationSearch
			view: br_application_searchpoint with "Profile" to applicationtype , nonEmptyUid to uid
		}
	}
	
	conceptData = Record {
		view: br_applicationDetail with currentApplication to uid
	}
	
	dataToReport = Dataset {
		view: br_permissionbyidentitylazyorg with conceptData.recorduid to applicationrecorduid
	}

	Group{
		layout: Layout { grab: horizontal False vertical False align: horizontal Center vertical Beginning }
		Spacer {
			height: 11
			hidden: Not BooleanPredicate(paramSearchMode)
		}
		SetNavigator {
			data: applicationList
			column: uid
			selection: currentApplication
			back-link: Activity Application Detail with currentApplication to paramApplicationUid , SerializeSearch applicationSearch to applicationSearch, paramSearchMode to paramSearchMode
			initial: uid
			show-count: True
			show-first: True
			show-last: True
			count-width: 150
			hidden: Not BooleanPredicate(paramSearchMode)
		}
	}
		
	Group {
		Text {
			value: $reportDetails.browsing_application_permissionsbyidentity.title	
		}		
		
		Link {
			icon: "32/details/printable_32_gray.png"
			target: Report browsing_permissionlistbyidentity with conceptData.recorduid to recorduid
			value: ""
			compact: True 
			layout: Layout { grab: horizontal False vertical False  indent: horizontal 0 vertical 0  align: horizontal End vertical Center}
			align: Right 
		}
		
		Text {
			value: $reportDetails.browsing_application_permissionsbyidentity.subtitle( conceptData.displayname )
			styling: reportSubtitle
			align: Left
		}
		
		Table{
			data: dataToReport
			double-click: GoTo Activity Permission Detail with selectedUid to paramPermissionUid
			show-filter: True
			show-count: True
			
			Column {
				column: recorduid
				hidden: True
				selection: selectedRecorduid
			}
			Column {
				column: uid
				hidden: True
				selection: selectedUid
			}
			Column{
				column: code
				header: $reportDetails.browsing_application_permissionsbyidentity.columns.code
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: identity_hrcode
				header: $reportDetails.browsing_application_permissionsbyidentity.columns.identity_hrcode
				sortable: True
				filterable: True
				width:100%
				align: Center
			}
			Column{
				column: identity_fullname
				header: $reportDetails.browsing_application_permissionsbyidentity.columns.identity_fullname
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: identity_internal
				text: Transform Current identity_internal using booleanDisplayMapping
				header: $reportDetails.browsing_application_permissionsbyidentity.columns.identity_internal
				sortable: True
				filterable: True
				width:100%
				align: Center
			}
			Column{
				column: identity_jobtitledisplayname
				header: $reportDetails.browsing_application_permissionsbyidentity.columns.identity_jobtitledisplayname
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: identityorg_displayname
				header: $reportDetails.browsing_application_permissionsbyidentity.columns.identityorg_displayname
				sortable: True
				filterable: True
				width:100%
			}
		}
		
		Button {
			actions:  GoTo Activity Permission Detail with selectedUid to paramPermissionUid
			layout: Layout { align: horizontal End vertical Beginning grab: horizontal False vertical False hint: width 200}
			disabled: StringPredicate(selectedUid) { when IsEmpty then True }
			text: $search_page.showdetails
		}
	}
}