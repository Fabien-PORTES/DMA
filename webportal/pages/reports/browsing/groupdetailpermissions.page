import "/webportal/pages/styles/styles.page"
import "/webportal/pages/resources/mappings.page"
import "/webportal/pages/resources/pages_nls.page"
import "/webportal/pages/reports/standard.page"

reportDetails = NLS {
	browsing_group_detailpermissions.pagetitle [en "Permissions" fr "Permissions"]
	browsing_group_detailpermissions.title [en "Permissions" fr "Permissions"]
	browsing_group_detailpermissions.subtitle [en "Direct Permissions - Group <<{0}>>" fr "Permissions Directement Associées - Groupe <<{0}>>"]
	browsing_group_detailpermissions.columns.application_displayname [ en "Application" fr "Application"]
	browsing_group_detailpermissions.columns.permission_code [en "Permission Code" fr "Code de la Permission"]
	browsing_group_detailpermissions.columns.permission_displayname [en "Permission" fr "Permission"]
	browsing_group_detailpermissions.columns.group [ en "Group" fr "Groupe"]
	browsing_group_detailpermissions.indirect [ en "Permissions Indirectly Associated" fr "Permissions Indirectement Associées"]
}

browsing_group_detailpermissions = Page {

	title: $reportDetails.browsing_group_detailpermissions.pagetitle
	tags: "group" priority 200, "byuid" , "browsing"
	icon: "16/details/browsing_16.png" large-icon: "48/details/browsing_48.png"
	feature: browsing_group_detailpermissions
	enter-event: BooleanCase (paramSearchMode) { when False then [ Set uid to nonEmptyUid] when True then []}
	
	mixins: simpleReport
	
	uid = Parameter {
		label:"Concept Uid"
		type:String
	}

	// Related to Search Navigator	
	paramSearchMode = Parameter {
		type: Boolean
		hidden: True
		default: False
	}
	// Related to Search Navigator	
	groupSearch = SearchDefinition {
		entity: Group
		simple-mode-rule: br_group_simple_search
	}
	
	// Related to Search Navigator
	currentGroup = Variable {
		type: String
		initial: uid
	}
	
	selectedUid = Variable {
		type: String
	}
	
	selectedRecorduid = Variable {
		type: Integer
	}
	
	// Empty uid when search mode
	nonEmptyUid = Variable { type: String }
	
	// Related to Search Navigator	
	groupList = Dataset {
		search: Search {
			definition: groupSearch
			view: br_group_searchpoint with nonEmptyUid to uid
		}
	}
	
	conceptData = Record {
		view: br_groupDetail with currentGroup to uid
	}
	
	dataToReport = Dataset {
		view: br_groupdirectpermissions with conceptData.recorduid to recorduid
	}
	dataToReport2 = Dataset {
		view: groupindirectpermissions with conceptData.recorduid to recorduid
	}

	Group{
		layout: Layout { grab: horizontal False vertical False align: horizontal Center vertical Beginning }
		Spacer {
			height: 11
			hidden: Not BooleanPredicate(paramSearchMode)
		}
		SetNavigator {
			data: groupList
			column: uid
			selection: currentGroup
			back-link: Activity Group Detail with currentGroup to paramGroupUid , SerializeSearch groupSearch to groupSearch, paramSearchMode to paramSearchMode
			initial: uid
			show-count: True
			show-first: True
			show-last: True
			count-width: 150
			hidden: Not BooleanPredicate(paramSearchMode)
		}
	}
		
	Group {
		Text {
			value: $reportDetails.browsing_group_detailpermissions.title	
		}		
		
		Link {
			icon: "32/details/printable_32_gray.png"
			target: Report browsing_groupdetailpermissions with conceptData.recorduid to recorduid
			value: ""
			compact: True 
			layout: Layout { grab: horizontal False vertical False  indent: horizontal 0 vertical 0  align: horizontal End vertical Center}
			align: Right 
		}
		
		Text {
			value: $reportDetails.browsing_group_detailpermissions.subtitle( conceptData.displayname )
			styling: reportSubtitle
			align: Left
		}
		
		Table{
			data: dataToReport
			double-click: GoTo Activity Permission Detail with selectedUid to paramPermissionUid
			show-filter: False
			show-count: False
			
			Column {
				column: permission_recorduid
				hidden: True
				selection: selectedRecorduid
			}
			Column {
				column: permission_uid
				hidden: True
				selection: selectedUid
			}
			Column{
				column: application_displayname
				header: $reportDetails.browsing_group_detailpermissions.columns.application_displayname
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: permission_code
				header: $reportDetails.browsing_group_detailpermissions.columns.permission_code
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: permission_displayname
				header: $reportDetails.browsing_group_detailpermissions.columns.permission_displayname
				sortable: True
				filterable: True
				width:100%
			}
		}
		Text {
			value: $reportDetails.browsing_group_detailpermissions.indirect
			styling: reportSubtitle
			align: Left
		}
		
		Table{
			data: dataToReport2
			double-click: GoTo Activity Permission Detail with selectedUid to paramPermissionUid
			
			Column {
				column: permission_recorduid
				hidden: True
				selection: selectedRecorduid
			}
			Column {
				column: permission_uid
				hidden: True
				selection: selectedUid
			}
			Column{
				column: application_displayname
				header: $reportDetails.browsing_group_detailpermissions.columns.application_displayname
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: permission_code
				header: $reportDetails.browsing_group_detailpermissions.columns.permission_code
				sortable: True
				filterable: True
				width:100%
			}
			Column{
				column: permission_displayname
				header: $reportDetails.browsing_group_detailpermissions.columns.permission_displayname
				sortable: True
				filterable: True
				width:100%
			}
			
			Column{
				column: group_displayname
				header: $reportDetails.browsing_group_detailpermissions.columns.group
				sortable: True
				filterable: True
				width:100%
			}
		}
		
		Button {
			actions:  GoTo Activity Permission Detail with selectedUid to paramPermissionUid
			layout: Layout { align: horizontal End vertical Beginning grab: horizontal False vertical False hint: width 200}
			disabled: StringPredicate(selectedUid) { when IsEmpty then True }
			text: $search_page.showdetails
		}
	}
}