
import "/webportal/pages/resources/concepts_nls.page"
import "/webportal/pages/resources/pages_nls.page"
import "/webportal/pages/resources/details_nls.page"
import "/webportal/pages/styles/styles.page"
import "/webportal/pages/resources/pickers.page"
import "/webportal/pages/resources/mappings.page"
import "/webportal/pages/reports/standard.page"
import "/webportal/pages/reports/browsing/identityteam.page"
import "/webportal/pages/custom/resources/DMA_nls.page"
import "/webportal/pages/custom/account/details.page"
import "/webportal/pages/custom/identity/detailsALIR.page"

avoidEmptyMapping = StringMapping {
	when IsEmpty then ''
	otherwise current prefix '' suffix ' '
}

identityDetailsADPageRecorduid = Page {
	title: "Recorduid redirection (identity)"
	conditional-redirect: ConditionalRedirect { condition: True target: Page identityDetailsADPage with identityUid.uid to paramIdentityUid }
	
	recorduid = Parameter {
		type: Integer
		hidden: True
		recorduid-of: Identity
		mandatory: True
	}
	
	identityUid = Record {
		view: br_identityDetail_uid with recorduid to recorduid
	}
}

identityDetailsADPage = Page {
	title: $identityAdDetails.title
	dynamic-title:$identityDetails.dynamictitle(identity.custom8)
	//enter-event: BooleanCase (paramSearchMode) { when False then [ Set paramIdentityUid to nonEmptyUid] when True then []}, TransferData identityTeamFirst(fullname) to (identityTeamShort)
	mixins: detailsPage
	
	// Parameters Here
	paramIdentityUid = Parameter {
		type: String
		hidden: True
		mandatory: True
	}
	
	paramSearchMode = Parameter {
		type: Boolean
		hidden: True
		default: False
	}
	
//	paramInitialIndex = Parameter {
//		type: Integer
//		hidden: True
//	}
//	
	// Search Definition Here
	identitySearch = SearchDefinition {
		entity: Identity
		simple-mode-rule: br_identity_simple_search
	}
	
//	// Variables Here
//	initialIndex = Variable {
//		type: Integer
//	}
	
	selectedIdentityUid = Variable {
		type: String
		initial: paramIdentityUid
	}
//	identityTeamShort = Variable {
//		type: String
//		multivalued: True
//	}
	
	// Empty uid when search mode
	nonEmptyUid = Variable { type: String }
	
	// Dataset for Navigator
	identityList = Dataset {
		search: Search {
			definition: identitySearch
			view: br_identity_searchpoint with nonEmptyUid to uid unless-empty
		}
	}
	
	// Dataset for Reports
//	relatedLinksTiles = Dataset {
//		pages: Pages{tags: "identity" and "byuid" }
//	}
	
	// Record for concept details
	identity = Record {
		view: br_identityDetail with selectedIdentityUid to uid
	}
	
	accountNISreconciled = Dataset {
		view: accountReconciledAD with selectedIdentityUid to uid
	}
	// Start of the Layout based on a 1-column Grid
	Grid {
		columns: GridColumn{}
		
		// Row for header
//		GridRow{
//			GridCell{
//				//background: Image "details/card_header.png"
//				Spacer { height: 67 }
//			}
//		}
		
		// Row for content
		GridRow{
			GridCell{
				
				Text {
					value: Concat ( Transform identity.custom8 using  avoidEmptyMapping , '/ ', identity.custom4 )
					styling:detailsTitle
					align: Center
				}
		
				
				Spacer { height:5 }
				
				Flow {
					disposition: Horizontal

					Group {
					// Group AD
						border:True
						title:$identityAdDetails.group_AD
						layout: Layout { hint: width 500}
						margins: Top 20 Left 25
						Text {
							value: Transform identity.custom8 using optionStringMapping 
							label: $identityAdAttributes.custom8
							lines: 2
						}
						Text {
							value: Transform identity.hrcode using optionStringMapping 
							label: $identityAdAttributes.hrcode
							lines: 3
						}	
						Text {
							value: Transform identity.fullname using optionStringMapping 
							label: $identityAdAttributes.FullName
							lines: 2
						}
						Text {
							value: Transform identity.mail using optionStringMapping 
							label: $identityAdAttributes.mail
							lines: 2
						}
						Text {
							value: Concat (Transform identity.custom14 using optionStringMapping , ' / ', Transform identity.custom13 using optionStringMapping)
							label: Concat ($identityAdAttributes.custom14 , ' / ',$identityAdAttributes.custom13 )
							lines: 2
						}
						Text {
							value: Transform identity.custom11 using diabled_Mapping 
							label: $identityAdAttributes.custom11
							lines: 2
						}
//						Text {
//							value: Transform identity.employeetypedisplayname using optionStringMapping 
//							label: $identity.employeetypedisplayname
//							lines: 2
//						}							
								
//						Text {
//							value: Date(identity.arrivaldate).value('dd/MM/yyyy')
//							label: $identity.arrivaldate
//							hidden:StringPredicate(identity.arrivaldate) { when IsEmpty then True}
//							lines: 2
//						}
					}
					
					// Third Column
					Group {
					// Group ALIR
						border: True
						title: $identityAdDetails.group_ALIR
						layout: Layout { hint: width 500}
						margins: Top 20 Left 25
//						Text {
//							value: Transform identityJob.jobtitledisplayname using optionStringMapping
//							label: $identity.jobtitledisplayname
//							lines: 2
//						}	
//						Link {
//							value: Transform linkedOrganisation.displayname using optionStringMapping
//							label: $organisation.concept
//							target: Activity Organisation Detail with linkedOrganisation.uid to paramOrganisationUid
//							icon:"details/link_briefcase_14.png"
//							disabled: 
//								OrPredicate {
//									StringPredicate(linkedOrganisation.displayname) { when IsEmpty then True }
//									Not FeaturePredicate identitydetails_linktoorganisation
//								}	
//						}
						Text {
							value: Transform identity.manager_hrcode using optionStringMapping 
							label: $identityALIRAttributes.hrcode
							lines: 2
						}
						Link {
							value: Transform identity.manager_fullname using optionStringMapping
							disabled:
								OrPredicate {
									StringPredicate(identity.manager_fullname) { when IsEmpty then True }
									Not FeaturePredicate identitydetails_linktomanager
								}	
							label: $identityALIRAttributes.fullName
							
							target: Page identityDetailsALIRPage with identity.manager_uid to paramIdentityUid
							icon:"details/link_profile_14.png"				
						}
						Text {
							//hidden: StringPredicate (identity.mail) {when IsEmpty then True otherwise False}
							value: Transform identity.mail using optionStringMapping 
							label: $identityALIRAttributes.mail
							lines: 2
						}
						Text {
							hidden: StringPredicate (identity.custom6) {when IsEmpty then True otherwise False}
							value: Transform identity.custom6 using optionStringMapping 
							label: $identityALIRAttributes.custom6
							lines: 2
						}	
						Text {
							//hidden: StringPredicate (identity.phone) {when IsEmpty then True otherwise False}
							value: Transform identity.phone using optionStringMapping 
							label: $identityALIRAttributes.phone
							lines: 2
						}	
						Text {
							hidden: StringPredicate (identity.custom5) {when IsEmpty then True otherwise False}
							value: Transform identity.custom5 using optionStringMapping 
							label: $identityALIRAttributes.custom5
							lines: 2
						}	
						
//						Text {
//							value: Date(identity.departuredate).value('dd/MM/yyyy')
//							label: $identity.departuredate
//							hidden:StringPredicate(identity.departuredate) { when IsEmpty then True}
//							lines: 2
//						}
					}
				}
				// Row with single column
//				Flow {
//					disposition: Horizontal
//					hidden: IntPredicate (Count identityTeamCount) { when =0 then True }
//					Group {
//						layout: Layout { hint: width 820}
//						
//						Link {		
//							value: Concat($identityDetails.identityteam.response (Join identityTeamShort using ", "), 
//										  $identityDetails.identityteam.response.others (Difference( Count identityTeamCount , 3)))
//							label: Label{ value: $identityDetails.identityteam.title}
//							target: Page browsing_identity_team with identity.uid to uid
//							disabled:Not FeaturePredicate identitydetails_linktoteam
//						}
//					}
//				}
				Spacer { height: 5 }
			}
		}
		
		
		GridRow{
		GridCell{
			
			//background: Image "details/card_content.png"
			Group {
				margins: Top 20 Left 25 Right 25 Bottom 20
				Group{
					margins: Top 20 Left 25
					border:False
					//title: $accountNisDetails.group_Ticket_Review
					
					Table {
						
						data:accountNISreconciled
						layout:Layout {hint:height 200}
						label: $identityAdDetails.reconciledNIS
						double-click: GoTo Page accountNISDetailsPage with Current NIS_uid to paramAccountUid
						show-count:True
						show-filter:True
						Column {
							header: $accountNISAttributes.hrcode
							column: NIS_identifier
							width:100%
							sortable:True
							hidden:True
						}
						Column {
							header:$accountNISAttributes.Login
							column: NIS_login
							sortable:True
							width:100%
							filterable:True
						}
						Column {
							header: $accountNISAttributes.repository
							column: displayname
							sortable:True
							width:100%
							filterable:True
						}
						Column {
							header: $accountNISAttributes.custom4
							column: NIS_custom4
							sortable:True
							width:100%
							}
						Column {
							header: $accountNISAttributes.custom9
							column: NIS_custom9
							sortable:True
							width:100%
							filterable:True
							}
						Column {
							header: $accountNISAttributes.disabled
							column: NIS_disabled
							sortable:True
							width:100%
							}
						Column {
							header: $accountNISAttributes.creationDate
							column: NIS_creationdate
							sortable:True
							width:100%
							}
						Column {
							header: $accountNISAttributes.recon.displayname
							column: recon_description
							sortable:True
							width:100%
							}
						Column {
							header: $accountNISAttributes.recon.reliability
							column: recon_reliability
							sortable:True
							width:100%
							}
						}
					}
				}
			}
		}
		// Row for footer
		GridRow{
			GridCell{
				//background: Image "details/card_footer.png"
				Spacer { height: 12 }
			}
		}
		
		// Row for links
//		GridRow{
//			GridCell{
//				Spacer { height: 20 }
//				Tiles {
//					columns:5
//					tile-height:120
//					mixins:detailIcons
//					TileGroup {
//						iterate-on: relatedLinksTiles
//						initial-sort: ^priority 
//						Tile {
//							Button {
//								actions: GoTo Dynamic (Current type, Current name) with identity.recorduid to recorduid, identity.uid to uid, SerializeSearch identitySearch to identitySearch, paramSearchMode to paramSearchMode
//								image: Current largeIcon
//								tooltip: Current title		
//							}
//							Text{
//								value: Current title
//								label: Label{ layout:Layout{indent: vertical 0 horizontal 0   }  }
//								lines:2
//							}
//						}
//					}
//				}
//			}
//		}
	}
}