/* Import other pages here */
import "/webportal/pages/mixins/workflow_mixins.page"
import "/webportal/pages/resources/mappings.page"
import "/webportal/pages/resources/pickers.page"
import "/webportal/pages/resources/workflow_pickers.page"
import "/webportal/pages/resources/concepts_nls.page"
import "/webportal/pages/resources/pages_nls.page"
import "/webportal/pages/resources/audittrail.page"

/* Nationalized labels here */
updatepermissionmanager_startNLS = NLS {
	mandatoryfields [en "*: mandatory fields" fr "* : champs obligatoires"]
	actionsection [en "Actions" fr "Actions"]
	cancel.buttontext [en "Cancel" fr "Annuler"]
	cancel.confirm [en "Cancel process creation ?" fr "Annuler la création du processus ?"]
	complete.buttontext [en "Start process" fr "Initier le processus"]
	complete.confirm [en "Start process ?" fr "Démarrer le processus ?"]
	complete.flashmessage [en "Process started" fr "Processus démarré"]
	title [en "Update permission manager" fr "Update permission manager"]
	dynamictitle [en "Update permission manager for \"{0}\" on \"{1}\"" fr "Mettre à jour le reponsable de la permission \"{0}\" sur l''application \"{1}\""]
	managerhrcode [en "Current manager HR code" fr "Matricule du responsable actuel"]
	managerfullname [en "Current manager fullname" fr "Nom du responsable actuel"]
	newmanagerconfirm [en "Are you sure that you want to assign {0}-{1}\nas the manager of the {2} permission on the {3} application?" fr "Etes vous sur de vouloir positionner {0}-{1} en tant que responsable\nde la permission {2} sur l''application {3}"]
	newmanagerremove [en "Are you sure that you want to remove {0}-{1}\nas the manager of the {2} permission on the {3} application?" fr "Etes vous sur de vouloir supprimer {0}-{1} en tant que responsable\nde la permission {2} sur l''application {3}"]
	confirmupdate [en "Your request to assign a new manager as been registered successfully" fr "Votre demande a bien été prise en compte"]
	removeupdate [en "Your request to remove the current manager as been registered successfully" fr "Votre demande a bien été prise en compte"]
	
	setmanager [en "Set a manager for this permission" fr "Assigner un responsable pour cette permission"]
	removemanager [en "Remove the current manager" fr "Supprimer le responsable actuel"]
	
	manageraudittrail [en "Browse modifications audit trail" fr "Voir l'historique des modifications"]
	
}

updatepermissionmanager_start = Page {
	title: $updatepermissionmanager_startNLS.title
	dynamic-title: $updatepermissionmanager_startNLS.dynamictitle(permission.displayname, permission.application_displayname)
	mixins: workflowDefaultMixin
	
	/* Parameters here */
	paramPermissionUid = Parameter {type:String multivalued:False}
	
	/* variables here */
	newmanagerUid = Variable {type:String multivalued:False}

	
	/* Datasets and records here */
	// Record for concept details
	permission = Record {
		view: br_permissionDetail with paramPermissionUid to uid
	}
	
	newManager = Record {
		view: br_identityDetail with newmanagerUid to uid
	}

	permissionbusinessowner = Record {
		view: br_permissionBusinessowner with paramPermissionUid to uid
	}

	task = TaskRecord (create "updatepermissionmanager")
	
	
	/* Page content */
	Grid {
		columns:GridColumn{width:64px}, GridColumn{width:320px}, GridColumn{width:320px}, GridColumn{width:grow}
		GridRow {
			height:96
			GridCell {
				Image {
					image: "48/red/permission.png"
					align: Center
				}
			}
			GridCell {
				Text {
					label: $permission.code
					value: Transform permission.code using optionStringMapping
					lines: 2
				}
											
				Text {
					label: $permission.displayname
					value: Transform permission.displayname using optionStringMapping
					lines: 2
				}
											
				Text{
					label: $permission.permissiontype
					value:  Transform permission.permissiontype using optionStringMapping
				}
			}
			GridCell {
				Text{
					label:   $permission.applicationdisplayname 
					value: Transform permission.application_displayname using optionStringMapping
					lines: 2
				}
											
				Text {
					label: $updatepermissionmanager_startNLS.managerhrcode
					value: Transform permissionbusinessowner.hrcode using optionStringMapping
					lines: 2
				}

				Text {
					label: $updatepermissionmanager_startNLS.managerfullname
					value: Transform permissionbusinessowner.fullname using optionStringMapping
					lines: 2
				}
			}
			GridCell {
			}
		}
		GridRow {
			GridCell {
				span:4
				Header {
					value:"What do you want to do?"
				}
			}
		}
		GridRow {
			height:grow
			GridCell {
				span:4
				ButtonGroup {
						Button {
							actions:Dialog identityPicker(newmanagerUid from outUid), 
									Confirm $updatepermissionmanager_startNLS.newmanagerconfirm(Transform newManager.hrcode using mayBeNullMapping, newManager.fullname, permission.displayname, permission.application_displayname),
									Flash Information $updatepermissionmanager_startNLS.confirmupdate,
									Set paramPermissionUid to task.permission,
									Set newmanagerUid to task.manager,
									StringCase(permissionbusinessowner.fullname) { when IsEmpty then [Set 'create' to task.action] otherwise [Set 'modify' to task.action] },
									TaskComplete task wait,
									GoTo Activity Permission Detail with paramPermissionUid to paramPermissionUid
							text:$updatepermissionmanager_startNLS.setmanager
						}					
						Button {
							actions:Confirm $updatepermissionmanager_startNLS.newmanagerremove(Transform permissionbusinessowner.hrcode using mayBeNullMapping, permissionbusinessowner.fullname, permission.displayname, permission.application_displayname),
									Flash Information $updatepermissionmanager_startNLS.removeupdate,
									Set paramPermissionUid to task.permission,
									Set 'delete' to task.action,
									TaskComplete task wait,
									GoTo Activity Permission Detail with paramPermissionUid to paramPermissionUid
							text:$updatepermissionmanager_startNLS.removemanager
							disabled:StringPredicate(permissionbusinessowner.fullname) {when IsEmpty then True}
						}					
						Button {
							actions:Dialog entityDetailsManagerAuditDialog("Permission" to type, paramPermissionUid to entity) 
						                        feature:permissiondetails_auditmanager
							                       
							text:$updatepermissionmanager_startNLS.manageraudittrail
						}
				}		
			}
		}
	}
}

